package com.tsing.global.utils;import org.modelmapper.ModelMapper;import org.modelmapper.convention.MatchingStrategies;import java.util.Collection;import java.util.List;import java.util.stream.Collectors;/** * @author Tsing * @version 0.0.1 * @date 2021/8/1 3:07 下午 * @description: 对象转换工具类 */public class ObjectMappingUtil {    private static final ModelMapper modelMapper;    static {        modelMapper = new ModelMapper();        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);    }    private ObjectMappingUtil() {    }    public static <D, T> D map(final T entity, Class<D> outputClass) {        return modelMapper.map(entity, outputClass);    }    public static <D, T> List<D> mapAll(final Collection<T> entityList, Class<D> outputClass) {        return entityList.stream().map(entity -> map(entity, outputClass))                .collect(Collectors.toList());    }    public static <S, D> D map(final S source, D destination) {        modelMapper.map(source, destination);        return destination;    }}